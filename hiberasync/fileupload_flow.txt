# 파일 업로드 흐름 설명

이 문서는 hiberasync 프로젝트의 갤러리 기능에서 파일 업로드가 처리되는 과정을 단계별로 설명합니다.

## 전체 흐름 요약

사용자가 웹 페이지에서 파일을 선택하고 업로드 버튼을 누르면, 파일은 서버로 전송되어 특정 위치에 저장됩니다. 그 후, 사용자는 업로드된 이미지를 결과 페이지에서 바로 확인할 수 있습니다.

## 단계별 상세 설명

### 1. 사용자 인터페이스 (write.html)

-   **파일 선택**: 사용자는 `write.html` 페이지에 있는 폼(`<form>`)을 통해 업로드할 파일을 선택합니다. 이 폼에는 텍스트를 입력하는 필드(`title`)와 파일을 선택하는 필드(`pic`)가 있습니다.
-   **업로드 실행**: 사용자가 '업로드' 버튼을 클릭하면 `upload()` JavaScript 함수가 실행됩니다.
-   **폼 데이터 전송**:
    -   `upload()` 함수는 폼의 속성을 동적으로 설정합니다.
    -   `action`은 `/upload/regist`로 지정되어, 폼 데이터가 전송될 서버의 URL을 의미합니다.
    -   `method`는 `POST` 방식으로 설정됩니다.
    -   `enctype`은 `multipart/form-data`로 설정됩니다. 이 설정은 파일 데이터를 폼에 포함시켜 서버로 전송하기 위해 반드시 필요합니다.
    -   설정이 완료되면 `form.submit()`을 통해 폼 데이터(텍스트 및 파일)가 서버로 전송됩니다.

### 2. 서버 측 처리 (UploadServlet.java - 추정)

-   **요청 수신**: `/upload/regist` URL을 처리하는 서블릿(Servlet)이 클라이언트의 `POST` 요청을 받습니다. 이 요청은 `multipart/form-data` 형식이므로, 일반적인 `request.getParameter()`로는 데이터를 처리할 수 없습니다.
-   **데이터 파싱**: Apache Commons FileUpload와 같은 라이브러리를 사용하여 `multipart` 요청을 파싱합니다. 이를 통해 텍스트 데이터('title')와 파일 데이터('pic')를 분리하여 얻을 수 있습니다.
-   **파일 저장**:
    -   서버는 전송된 파일 데이터를 실제 파일로 변환합니다.
    -   서버의 특정 경로(예: `/data/`)에 고유한 이름으로 파일을 저장합니다.
-   **세션에 정보 저장**: 파일이 성공적으로 저장되면, 파일의 이름(예: `my-image.jpg`)을 사용자 세션(Session)에 저장합니다. (`session.setAttribute("img", "my-image.jpg");`)
-   **결과 페이지로 리다이렉트**: 모든 처리가 완료되면, 사용자를 결과 페이지(`result.jsp`)로 이동시킵니다.

### 3. 결과 표시 (result.jsp)

-   **세션에서 파일 이름 가져오기**: `result.jsp` 페이지는 로드될 때, 서버 측 코드(`<% ... %>`)를 실행하여 현재 사용자 세션에 저장된 파일 이름을 가져옵니다. (`String img = (String)session.getAttribute("img");`)
-   **이미지 출력**:
    -   가져온 파일 이름을 `<img>` 태그의 `src` 속성에 사용하여 이미지의 URL을 완성합니다.
    -   예를 들어, 파일 이름이 `my-image.jpg`이면, 이미지 태그는 `<img src="/data/my-image.jpg">`와 같이 렌더링됩니다.
    -   브라우저는 이 URL을 통해 서버에 저장된 이미지를 요청하고, 사용자는 방금 업로드한 이미지를 화면에서 확인할 수 있습니다.
